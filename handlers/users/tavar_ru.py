from aiogram import types
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters.state import StatesGroup, State
from aiogram.types import InputFile

from keyboards.default.bosh_menu_ru import Fan_ru, miqdor_ru, buyutma_ru, mahsulotlar_ru, bosh_menu_ru
from loader import dp
from utils.db_api.sqlite import Database

db = Database(path_to_db='./data/main.db')
try:
    db.create_table_users()
except:
    pass



class Buyurtma_ru(StatesGroup):
    tavar = State()
    middor = State()

@dp.message_handler(text="üè†–ú–µ–Ω—é", state=[Buyurtma_ru.tavar, Buyurtma_ru.middor])
async def bot_ru_start(message: types.Message, state:FSMContext):
    await message.answer(f"–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π —Ä–∞–∑–¥–µ–ª", reply_markup=bosh_menu_ru)
    await state.finish()


@dp.message_handler(text="–§–∞–Ω –∫–æ–π–ª")
async def tavarru_4lar(message: types.Message):
    photo = InputFile('./data/photos/fan_koil.jpg')
    await message.answer_photo(photo, caption=f"üí® –≠–∫—Ä–∞–Ω—ã –¥–ª—è –ø–æ—Ç–æ–ª–æ—á–Ω—ã—Ö –∫–æ–Ω–¥–∏—Ü–∏–æ–Ω–µ—Ä–æ–≤\n"
                                              f"üí® –ó–∞—â–∏—Ç–Ω—ã–π —ç–∫—Ä–∞–Ω –æ—Ç—Ä–∞–∂–∞–µ—Ç –∏ —Ä–∞—Å—Å–µ–∏–≤–∞–µ—Ç –ø—Ä—è–º—ã–µ –ø–æ—Ç–æ–∫–∏ "
                                              f"–∫–æ–Ω–¥–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –≤–æ–∑–¥—É—Ö–∞\n "
                                              f"üí® –ü—Ä–æ–∑—Ä–∞—á–Ω–∞—è –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ–¥–æ–π–¥—ë—Ç –ø–æ–¥ –ª—é–±–æ–π –∏–Ω—Ç–µ—Ä—å–µ—Ä\n"
                                              f"—Ü–µ–Ω–∞:  65x65 450 000 —Å—É–º\n"
                                              f"        95x95 550 000 —Å—É–º", reply_markup=Fan_ru)

@dp.message_handler(text_contains="–§–∞–Ω –∫–æ–π–ª.")
async def tavar_8lar(message: types.Message, state: FSMContext):
    await state.update_data(
        {"tavar": message.text[-5:-3]}
    )
    await message.answer(f"üëáüèª –í—ã–±–µ—Ä–∏—Ç–µ –∏–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ —Å—É–º–º—É:", reply_markup=miqdor_ru)
    await Buyurtma_ru.tavar.set()


@dp.message_handler(text_contains="–ö–æ–Ω–¥–∏—Ü–∏–æ–Ω–µ—Ä 7-12")
async def tavar_3lruar(message: types.Message, state: FSMContext):
    await state.update_data(
        {"tavar": "7"}
    )
    photo = InputFile('./data/photos/7-12.jpg')
    await message.answer_photo(photo, caption=f"üí® –≠–∫—Ä–∞–Ω—ã –¥–ª—è –Ω–∞—Å—Ç–µ–Ω–Ω—ã—Ö –∫–æ–Ω–¥–∏—Ü–∏–æ–Ω–µ—Ä–æ–≤ –æ—Ç 7 –¥–æ 12–≥–æ —Ä–∞–∑–º–µ—Ä–∞\n"
                                              f"üí® –ó–∞—â–∏—Ç–Ω—ã–π —ç–∫—Ä–∞–Ω –æ—Ç—Ä–∞–∂–∞–µ—Ç –∏ —Ä–∞—Å—Å–µ–∏–≤–∞–µ—Ç –ø—Ä—è–º—ã–µ –ø–æ—Ç–æ–∫–∏ "
                                              f"–∫–æ–Ω–¥–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –≤–æ–∑–¥—É—Ö–∞\n "
                                              f"üí® –ü—Ä–æ–∑—Ä–∞—á–Ω–∞—è –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ–¥–æ–π–¥—ë—Ç –ø–æ–¥ –ª—é–±–æ–π –∏–Ω—Ç–µ—Ä—å–µ—Ä\n"
                                              f"—Ü–µ–Ω–∞: 150 000 —Å—É–º", reply_markup=miqdor_ru)
    await Buyurtma_ru.tavar.set()





@dp.message_handler(text_contains="–ö–æ–Ω–¥–∏—Ü–∏–æ–Ω–µ—Ä 18-24")
async def tavar_2lruar(message: types.Message, state:FSMContext):
    await state.update_data(
        {"tavar": "18"}
    )
    photo = InputFile('./data/photos/18-24.jpg')
    await message.answer_photo(photo, caption=f"üí® –≠–∫—Ä–∞–Ω—ã –¥–ª—è –Ω–∞—Å—Ç–µ–Ω–Ω—ã—Ö –∫–æ–Ω–¥–∏—Ü–∏–æ–Ω–µ—Ä–æ–≤ –æ—Ç 18 –¥–æ 24–≥–æ —Ä–∞–∑–º–µ—Ä–∞\n"
                                              f"üí® –ó–∞—â–∏—Ç–Ω—ã–π —ç–∫—Ä–∞–Ω –æ—Ç—Ä–∞–∂–∞–µ—Ç –∏ —Ä–∞—Å—Å–µ–∏–≤–∞–µ—Ç –ø—Ä—è–º—ã–µ –ø–æ—Ç–æ–∫–∏ "
                                              f"–∫–æ–Ω–¥–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –≤–æ–∑–¥—É—Ö–∞\n "
                                              f"üí® –ü—Ä–æ–∑—Ä–∞—á–Ω–∞—è –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ–¥–æ–π–¥—ë—Ç –ø–æ–¥ –ª—é–±–æ–π –∏–Ω—Ç–µ—Ä—å–µ—Ä\n"
                                              f"—Ü–µ–Ω–∞: 200 000 —Å—É–º\n"
                                              f"üëáüèª –í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–ª–∏ –∑–∞–ø–∏—à–∏ —ç—Ç–æ:", reply_markup=miqdor_ru)
    await Buyurtma_ru.tavar.set()



@dp.message_handler(text_contains="–ö–æ–Ω–¥–∏—Ü–∏–æ–Ω–µ—Ä 36-48")
async def tavarruar(message: types.Message, state:FSMContext):
    await state.update_data(
        {"tavar": "36"}
    )
    photo = InputFile('./data/photos/36-24.jpg')
    await message.answer_photo(photo, caption=f"üí® –≠–∫—Ä–∞–Ω—ã –¥–ª—è –Ω–∞—Å—Ç–µ–Ω–Ω—ã—Ö –∫–æ–Ω–¥–∏—Ü–∏–æ–Ω–µ—Ä–æ–≤ –æ—Ç 36 –¥–æ 48–≥–æ —Ä–∞–∑–º–µ—Ä–∞\n"
                                              f"üí® –ó–∞—â–∏—Ç–Ω—ã–π —ç–∫—Ä–∞–Ω –æ—Ç—Ä–∞–∂–∞–µ—Ç –∏ —Ä–∞—Å—Å–µ–∏–≤–∞–µ—Ç –ø—Ä—è–º—ã–µ –ø–æ—Ç–æ–∫–∏ "
                                              f"–∫–æ–Ω–¥–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –≤–æ–∑–¥—É—Ö–∞\n "
                                              f"üí® –ü—Ä–æ–∑—Ä–∞—á–Ω–∞—è –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ–¥–æ–π–¥—ë—Ç –ø–æ–¥ –ª—é–±–æ–π –∏–Ω—Ç–µ—Ä—å–µ—Ä\n"
                                              f"—Ü–µ–Ω–∞: 350 000 —Å—É–º\n"
                                              f"üëáüèª –í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–ª–∏ –∑–∞–ø–∏—à–∏ —ç—Ç–æ:", reply_markup=miqdor_ru)
    await Buyurtma_ru.tavar.set()





# State miqdor
@dp.message_handler(lambda message: message.text.isdigit(), state=Buyurtma_ru.tavar)
async def miqsqaasdor_ru(message: types.Message, state: FSMContext):
    data = await state.get_data()
    tavar = str(data.get("tavar"))
    miqdor = message.text
    # tavar_tayyor = "kon"+tavar

    user = db.select_user(user_id=message.from_user.id)
    if not user:
        user = db.add_user(user_id=message.from_user.id)

    t7 = 0
    t18 = 0
    t36 = 0
    t65 = 0
    t95 = 0

    if tavar == "7":
        t7 = miqdor
        db.update_user_kon7(user_id=message.from_user.id, kon7=str(miqdor))
    if tavar == "18":
        t18 = miqdor
        db.update_user_kon18(user_id=message.from_user.id, kon18=str(miqdor))
    if tavar == "36":
        t36 = miqdor
        db.update_user_kon36(user_id=message.from_user.id, kon36=str(miqdor))
    if tavar == "65":
        t65 = miqdor
        db.update_user_kon65(user_id=message.from_user.id, kon65=str(miqdor))
    if tavar == "95":
        t95 = miqdor
        db.update_user_kon95(user_id=message.from_user.id, kon95=str(miqdor))
    user = db.select_user(user_id=message.from_user.id)
    kon7 = user[2]
    kon18 = user[3]
    kon36 = user[4]
    kon65 = user[5]
    kon95 = user[6]
    tavar = ""
    summ = 0
    if kon7:
        tavar = tavar+f"–ö–æ–Ω–¥–∏—Ü–∏–æ–Ω–µ—Ä 7-12 :  {kon7}  —à—Ç. {int(kon7)*140000} —Å—É–º\n"
        summ = summ + int(kon7)*140000
    if kon18:
        tavar = tavar+f"–ö–æ–Ω–¥–∏—Ü–∏–æ–Ω–µ—Ä 18-24 :  {kon18} —à—Ç.  {int(kon18)*190000} —Å—É–º\n"
        summ = summ + int(kon18)*190000

    if kon36:
        tavar = tavar+f"–ö–æ–Ω–¥–∏—Ü–∏–æ–Ω–µ—Ä 36-48 :  {kon36} —à—Ç.  {int(kon36)*300000} —Å—É–º\n"
        summ = summ + int(kon36)*300000

    if kon65:
        tavar = tavar+f"–§–∞–Ω –∫–æ–π–ª. 65-65 :  {kon65}  —à—Ç. {int(kon65)*450000} —Å—É–º\n"
        summ = summ + int(kon65)*450000

    if kon95:
        tavar = tavar+f"–§–∞–Ω –∫–æ–π–ª. 95-95 :  {kon95} —à—Ç.  {int(kon95)*550000} —Å—É–º\n"
        summ = summ + int(kon95)*550000
    await message.answer(f"–í–∞—à–∏ –∏–∑–º–µ—Ä–µ–Ω–∏—è:\n"
                         f"{tavar}\n–∏—Ç–æ–≥–æ : {summ} —Å—É–º")
    await message.answer(f"–í–∞—à –∑–∞–∫–∞–∑ –ø–æ–º–µ—â–µ–Ω –≤ –∫–æ—Ä–∑–∏–Ω—É", reply_markup=buyutma_ru)
    await state.finish()


@dp.message_handler(lambda message: not message.text.isdigit(), state=Buyurtma_ru.tavar)
async def miqdor_not_ru(message: types.Message):
    return await message.answer(F"–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–∏—à–ª–∏—Ç–µ —Å—é–¥–∞ —Ç–æ–ª—å–∫–æ –Ω–æ–º–µ—Ä")


@dp.message_handler(text="üìù–î–æ–±–∞–≤–∏—Ç—å –∑–∞–∫–∞–∑")
async def mi321or_ru(message: types.Message, state: FSMContext):
    await message.answer(f"–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π —Ä–∞–∑–¥–µ–ª", reply_markup=mahsulotlar_ru)


@dp.message_handler(text="üîÑ–û—á–∏—Å—Ç–∏—Ç—å –∫–æ—Ä–∑–∏–Ω—É")
async def mi321or_ru(message: types.Message, state: FSMContext):
    db.update_user_kon7(user_id=message.from_user.id, kon7=None)
    db.update_user_kon18(user_id=message.from_user.id, kon18=None)
    db.update_user_kon36(user_id=message.from_user.id, kon36=None)
    db.update_user_kon65(user_id=message.from_user.id, kon65=None)
    db.update_user_kon95(user_id=message.from_user.id, kon95=None)
    await message.answer(f"–ö–æ—Ä–∑–∏–Ω–∞ –æ—á–∏—â–µ–Ω–∞", reply_markup=bosh_menu_ru)


@dp.message_handler(text="üõí –ö–æ—Ä–∑–∏–Ω–∞")
async def mi1r_ru(message: types.Message, state: FSMContext):
    user = db.select_user(user_id=message.from_user.id)
    if not user:
        user = db.add_user(user_id=message.from_user.id)

    kon7 = user[2]
    kon18 = user[3]
    kon36 = user[4]
    kon65 = user[5]
    kon95 = user[6]
    tavar = ""



    summ = 0
    if kon7:
        tavar = tavar+f"–ö–æ–Ω–¥–∏—Ü–∏–æ–Ω–µ—Ä 7-12 :  {kon7}  —à—Ç. {int(kon7)*140000} —Å—É–º\n"
        summ = summ + int(kon7)*140000
    if kon18:
        tavar = tavar+f"–ö–æ–Ω–¥–∏—Ü–∏–æ–Ω–µ—Ä 18-24 :  {kon18}  —à—Ç. {int(kon18)*190000} —Å—É–º\n"
        summ = summ + int(kon18)*190000

    if kon36:
        tavar = tavar+f"–ö–æ–Ω–¥–∏—Ü–∏–æ–Ω–µ—Ä 36-48 :  {kon36} —à—Ç.  {int(kon36)*300000} —Å—É–º\n"
        summ = summ + int(kon36)*300000

    if kon65:
        tavar = tavar+f"–§–∞–Ω –∫–æ–π–ª. 65-65 :  {kon65} —à—Ç.  {int(kon65)*450000} —Å—É–º\n"
        summ = summ + int(kon65)*450000

    if kon95:
        tavar = tavar+f"–§–∞–Ω –∫–æ–π–ª. 95-95 :  {kon95}  —à—Ç. {int(kon95)*550000} —Å—É–º\n"
        summ = summ + int(kon95)*550000

    await message.answer(f"–í–∞—à–∏ –∏–∑–º–µ—Ä–µ–Ω–∏—è:\n"
                         f"{tavar}\n"
                         f"–∏—Ç–æ–≥–æ : {summ} —Å—É–º", reply_markup=buyutma_ru)


